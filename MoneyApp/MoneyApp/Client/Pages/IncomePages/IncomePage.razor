@page "/income"
@page "/income/{id:int}"
@inject IIncomeService IncomeService
@inject IIncomeCategoryService IncomeCategoryService

@if (Id == null)
{
    <PageTitle>Create a new Income</PageTitle>
    <h3>Create a new Income</h3>
}
else
{
    <PageTitle>Edit Income</PageTitle>
    <h3>Edit Income</h3>
}

<EditForm Model="income" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div>
        <label for="income">Description</label>
        <InputText id="income" @bind-Value="income.Description" class="form-control"></InputText>
        <ValidationMessage For="@(() => income.Description)"></ValidationMessage>
    </div>
    <div>
        <label for="income">Amount</label>
        <InputNumber id="income" @bind-Value="income.Amount" class="form-control"></InputNumber>
        <ValidationMessage For="@(() => income.Amount)"></ValidationMessage>
    </div>
    <div>
        <label>Income Category</label><br />
        <InputSelect @bind-Value="income.IncomeCategoryId" class="form-select">
            @if (Id == null)
            {
                <option selected value="">Select category</option>
            }

            @foreach (var incomeCategory in IncomeCategoryService.IncomeCategories)
            {
                <option value="@incomeCategory.Id">@incomeCategory.CategoryName</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => income.IncomeCategoryId)"></ValidationMessage>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    @if (Id != null)
    {
        <button type="button" class="btn btn-danger" @onclick="DeleteIncome">Delete Income</button>
    }
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    IncomeDTO income = new IncomeDTO();

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            income.IncomeCategoryId = income.IncomeCategory?.Id;
        }
        else
        {
            income = await IncomeService.GetIncomeById((int)Id);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Income" : "Update Income";
        await IncomeCategoryService.GetIncomeCategories();
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await IncomeService.CreateIncome(income);
        }
        else
        {
            await IncomeService.UpdateIncome(income);
        }
    }

    async Task DeleteIncome()
    {
        await IncomeService.DeleteIncome(income.Id);
    }
}

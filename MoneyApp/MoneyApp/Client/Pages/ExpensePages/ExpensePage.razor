@page "/expense"
@page "/expense/{id:int}"
@inject IExpenseService ExpenseService
@inject IExpenseCategoryService ExpenseCategoryService

@if (Id == null)
{
    <PageTitle>Create a new Expense</PageTitle>
    <h3>Create a new Expense</h3>
}
else
{
    <PageTitle>Edit Expense</PageTitle>
    <h3>Edit Expense</h3>
}

<EditForm Model="expense" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div>
        <label for="expense">Description</label>
        <InputText id="expense" @bind-Value="expense.Description" class="form-control"></InputText>
        <ValidationMessage For="@(() => expense.Description)"></ValidationMessage>
    </div>
    <div>
        <label for="expense">Amount</label>
        <InputNumber id="expense" @bind-Value="expense.Amount" class="form-control"></InputNumber>
        <ValidationMessage For="@(() => expense.Amount)"></ValidationMessage>
    </div>
    <div>
        <label>Expense Category</label><br />
        <InputSelect @bind-Value="expense.ExpenseCategoryId" class="form-select">
            @if(Id == null)
            {
                <option selected value="">Select category</option>
            }

            @foreach (var expenseCategory in ExpenseCategoryService.ExpenseCategories)
            {
                <option value="@expenseCategory.Id">@expenseCategory.CategoryName</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => expense.ExpenseCategoryId)"></ValidationMessage>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    @if (Id != null)
    {
        <button type="button" class="btn btn-danger" @onclick="DeleteExpense">Delete Expense</button>
    }
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    ExpenseDTO expense = new ExpenseDTO();

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            expense.ExpenseCategoryId = expense.ExpenseCategory?.Id;
        }
        else
        {
            expense = await ExpenseService.GetExpenseById((int)Id);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Expense" : "Update Expense";
        await ExpenseCategoryService.GetExpenseCategories();
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await ExpenseService.CreateExpense(expense);
        }
        else
        {
            await ExpenseService.UpdateExpense(expense);
        }
    }

    async Task DeleteExpense()
    {
        await ExpenseService.DeleteExpense(expense.Id);
    }
}

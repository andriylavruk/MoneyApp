@page "/incomecategories"
@inject IIncomeCategoryService IncomeCategoryService
@inject NavigationManager NavigationManager

<PageTitle>Income Categories</PageTitle>

@if(_signInSuccessful == false)
{
    <h3>You are not authorized.</h3>
}
else
{
    <h3>Income Categories</h3>

    @if (IncomeCategoryService.IncomeCategories == null)
    {
        <p><em>Loading...</em></p>
    }
    else if (IncomeCategoryService.IncomeCategories.Count == 0)
    {
        <p>There are no Income Categories.</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Category name</th>
                    <th>Options</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var incomeCategory in IncomeCategoryService.IncomeCategories)
                {
                    <tr>
                        <td>@incomeCategory.CategoryName</td>
                        <td>
                            <button class="btnalert-primary" @onclick="(() => ShowIncomeCategory(incomeCategory.Id))"><i class="oi oi-pencil"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <button class="btn btn-primary" @onclick="CreateNewIncomeCategory">Create Income Category</button>
}

@code {
    [CascadingParameter]
    protected Task<AuthenticationState> AuthenticationState { get; set; }

    protected bool _signInSuccessful = false;

    public string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationState).User;

        try
        {
            if (user.Identity.IsAuthenticated == true)
            {
                _signInSuccessful = true;
                await IncomeCategoryService.GetIncomeCategories();
            }
            else
            {
                _signInSuccessful = false;
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }

    void ShowIncomeCategory(int id)
    {
        NavigationManager.NavigateTo($"incomecategory/{id}");
    }

    void CreateNewIncomeCategory()
    {
        NavigationManager.NavigateTo("/incomecategory");
    }
}
